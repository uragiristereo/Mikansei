plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.parcelize)
    alias(libs.plugins.kotlinx.serialization)
    alias(libs.plugins.gms)
    alias(libs.plugins.firebase.crashlytics)
    alias(libs.plugins.compose.compiler)
}

android {
    namespace "com.uragiristereo.mikansei"

    defaultConfig {
        applicationId "com.uragiristereo.mikansei"
        targetSdk 34
        versionName "1.0.2"
        versionCode 102

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix = ".dev"
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro",
            )
        }
    }

    flavorDimensions.add("env")

    productFlavors {
        oss {
            dimension "env"

            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }

        play {
            dimension "env"
        }
    }

    applicationVariants.configureEach { variant ->
        // Enables GMS on play release build variant
        tasks.named("process${variant.name.capitalize()}GoogleServices").configure {
            enabled = variant.flavorName == "play" && buildType.name == "release"
        }
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
    }

    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
}

kotlin {
    jvmToolchain(17)
}

dependencies {
    implementation(project(":core:danbooru"))
    implementation(project(":core:database"))
    implementation(project(":core:domain"))
    implementation(project(":core:model"))
    implementation(project(":core:network"))
    implementation(project(":core:preferences"))
    implementation(project(":core:product"))
    implementation(project(":core:resources"))
    implementation(project(":core:ui"))
    implementation(project(":feature:about"))
    implementation(project(":feature:filters"))
    implementation(project(":feature:home"))
    implementation(project(":feature:image"))
    implementation(project(":feature:saved_searches"))
    implementation(project(":feature:search"))
    implementation(project(":feature:settings"))
    implementation(project(":feature:user"))

    implementation(libs.bundles.androidx)
    implementation(libs.androidx.splashscreen)
    implementation(libs.bundles.compose)
    implementation(libs.bundles.androidx.compose)
    debugImplementation(libs.bundles.compose.debug)
    implementation(libs.bundles.koin)
    implementation(libs.accompanist.permissions)
    implementation(libs.bundles.coil)
    implementation(libs.timber)
    implementation(libs.kotlinx.serialization.json)
    implementation(libs.serialized.navigation.extension.serializer.kotlinx)
    playImplementation(platform(libs.firebase.bom))
    playImplementation(libs.firebase.analytics)
    playImplementation(libs.firebase.crashlytics)
    coreLibraryDesugaring(libs.desugar.jdk.libs)
}
