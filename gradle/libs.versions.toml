[versions]
gradle = "8.1.2"
kotlin = "1.9.10"
ksp = "1.9.10-1.0.13"
lifecycle = "2.6.2"
compose = "1.5.4"
compose-compiler = "1.5.3"
room = "2.6.0"
accompanist = "0.32.0"
koin = "3.5.0"
coil = "2.4.0"
okhttp = "5.0.0-alpha.11"
retrofit = "2.9.0"
safer-navigation-compose = "860e4afc2f"
media3 = "1.1.1"

[plugins]
android-application = { id = "com.android.application", version.ref = "gradle" }
android-library = { id = "com.android.library", version.ref = "gradle" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }


[libraries]
# AndroidX
androidx-core = { module = "androidx.core:core-ktx", version = "1.12.0" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-savedstate = { module = "androidx.savedstate:savedstate-ktx", version = "1.2.1" }
androidx-splashscreen = { module = "androidx.core:core-splashscreen", version = "1.0.1" }
androidx-datastore = { module = "androidx.datastore:datastore", version = "1.0.0" }
androidx-browser = { module = "androidx.browser:browser", version = "1.6.0" }

# Jetpack Compose
compose = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version = "1.8.0" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version = "1.0.1" }

# AndroidX Room Database
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# Accompanist Compose Extensions
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
accompanist-insets-ui = { module = "com.google.accompanist:accompanist-insets-ui", version.ref = "accompanist" }

# Koin Dependency Injection
koin = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-navigation = { module = "io.insert-koin:koin-androidx-navigation", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }

# Coil Image Loader
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }

# TouchImageView
touchimageview = { module = "com.github.MikeOrtiz:TouchImageView", version = "3.2.1" }

# OkHttp HTTP Client
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-dnsoverhttps = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps", version.ref = "okhttp" }

# Retrofit HTTP Client
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-kotlinx-serialization = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version = "1.0.0" }

# Kotlinx.Serialization JSON Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.6.0" }

# Timber Logger
timber = { module = "com.jakewharton.timber:timber", version = "5.0.1" }

# Safer Navigation Compose
safer-navigation-compose = { module = "com.github.uragiristereo.safer-navigation-compose:navigation-compose", version.ref = "safer-navigation-compose" }

# AndroidX Media3
media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3" }
media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }

# Testing
junit = { module = "junit:junit", version = "4.13.2" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version = "1.1.5" }
turbine = { module = "app.cash.turbine:turbine", version = "1.0.0" }


[bundles]
androidx = ["androidx-core", "androidx-lifecycle-runtime", "androidx-savedstate"]
androidx-compose = ["androidx-activity-compose", "androidx-lifecycle-viewmodel-compose"]
compose = ["compose", "compose-material", "compose-tooling-preview"]
compose-debug = ["compose-ui-tooling", "compose-ui-test-manifest"]
room = ["room-runtime", "room-ktx"]
koin = ["koin", "koin-androidx-navigation", "koin-androidx-compose"]
retrofit = ["okhttp", "retrofit", "retrofit-converter-kotlinx-serialization"]
coil = ["coil", "coil-compose"]
core = ["koin", "timber"]
media3 = ["media3-exoplayer", "media3-okhttp", "media3-ui"]
